<%
If OT_ISOTCMS<>True Then
	response.write("非法访问")
	response.End()
End If

' 自动闭合UBB
Function CloseMark_UBB(strContent)
	Dim arrTags, i, OpenPos, ClosePos, re, strMatchs, j, Match
	Set re = New RegExp
	re.IgnoreCase = True	' 忽略字符大小写
	re.Global = True		' 设置全局可用性 
	arrTags = Array("code", "quote", "list", "color", "align", "font", "size", "b", "i", "u", "html")
	For i = 0 To UBound(arrTags)
		OpenPos	= 0	' 初始化当前标签开始标记的个数
		ClosePos= 0	' 初始化当前标签结束标记的个数
		re.Pattern = "\[" + arrTags(i) + "(=[^\[\]]+|)\]"	' 开始分别正则判断开始与结束标记的个数
		Set strMatchs = re.Execute(strContent)
		For Each Match in strMatchs
			OpenPos = OpenPos + 1
		Next
		re.Pattern = "\[/" + arrTags(i) + "\]"
		Set strMatchs = re.Execute(strContent)
		For Each Match in strMatchs
			ClosePos = ClosePos + 1
		Next
		For j = 1 To OpenPos - ClosePos	' 当开始与结束标记数量不一致时，闭合当前标签
			strContent = strContent + "[/" + arrTags(i) + "]"
		Next
	Next
	CloseMark_UBB = strContent
	Set re = Nothing
End Function


' 自动闭合html
Function CloseMark_HTML(strContent)
	Dim arrTags, i, OpenPos, ClosePos, re, strMatchs, j, Match
	Set re = New RegExp
	re.IgnoreCase = True
	re.Global = True
	arrTags = Array("p", "div", "span", "table", "ul", "font", "b", "u", "i", "h1", "h2", "h3", "h4", "h5", "h6")
	For i = 0 To UBound(arrTags)
		OpenPos = 0
		ClosePos = 0
		re.Pattern = "\<" + arrTags(i) + "( [^\<\>]+|)\>"
		Set strMatchs = re.Execute(strContent)
		For Each Match in strMatchs
			OpenPos = OpenPos + 1
		Next
		re.Pattern = "\</" + arrTags(i) + "\>"
		Set strMatchs = re.Execute(strContent)
		For Each Match in strMatchs
			ClosePos = ClosePos + 1
		Next
		If OpenPos>ClosePos Then
			For j = 1 To OpenPos - ClosePos
				strContent = strContent + "</" + arrTags(i) + ">"
			Next
		ElseIf OpenPos<ClosePos Then
			For j = 1 To ClosePos - OpenPos
				strContent = "<" + arrTags(i) + ">" + strContent
			Next
		End If
	Next
	CloseMark_HTML = strContent
	Set re = Nothing
End Function
%>