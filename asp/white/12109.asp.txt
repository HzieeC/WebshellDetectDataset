<%
If OT_ISOTCMS<>True Then
	response.write("非法访问")
	response.End()
End If

'g_CryptThis = "网钛科技otcms.com"

'Response.Write "<p>原始字符串: " & g_CryptThis & "<p>"
'Response.Write "<p>密钥: " & strFullKey  & "<p>"
'Response.Write "<p>加密后: " & encrypt_encode(g_CryptThis,strFullKey) & "<p>"
'Response.Write "<p>加密后: " & Server.URLEncode(encrypt_encode(g_CryptThis,strFullKey)) & "<p>"
'Response.Write "<p>解密后: " & encrypt_decode(encrypt_encode(g_CryptThis,strFullKey),strFullKey) & "<p>"


'异或加密
Function encrypt_encode(enCodeStr,keyStr)
	Dim keyLen, enCodeLen, newStr, enChar, keyChar, strChar, i

	keyLen		= Len(keyStr)
	enCodeLen	= Len(enCodeStr)
	If keyLen<enCodeLen Then keyStr = keyStr & String(enCodeLen-keyLen,"O")
	For i = 1 To Len(enCodeStr)
		keyChar = Asc(mid(keyStr,i,1))
		strChar = Asc(mid(enCodeStr,i,1))
		enChar = keyChar Xor strChar
		newStr =  newStr & Chr(enChar)
	Next
	encrypt_encode = newStr
End Function


'异或解密
Function encrypt_decode(deCodeStr,keyStr)
	Dim keyLen, enCodeLen, newStr, deChar, keyChar, strChar, i

	keyLen		= Len(keyStr)
	deCodeLen	= Len(deCodeStr)
	If keyLen<deCodeLen Then keyStr = keyStr & String(deCodeLen-keyLen,"O")
	For i = 1 To Len(deCodeStr)
		keyChar = Asc(mid(keyStr,i,1))
		strChar = Asc(mid(deCodeStr,i,1))
		deChar = keyChar Xor strChar
		newStr =  newStr & Chr(deChar)
	Next
	encrypt_decode = newStr
End Function






' server.URLEncode的解密函数
Function urldecode(ByVal encodestr)
'	urldecode = unescape(encodestr)
	Dim newstr,havechar,lastchar,i,char_c,next_1_c,next_1_Num
	newstr=""
	havechar=false
	lastchar=""
	For i=1 To Len(encodestr)
		char_c=Mid(encodestr,i,1)
		If char_c="+" Then
			newstr=newstr & " "
		ElseIf char_c="%" Then
			next_1_c=Mid(encodestr,i+1,2)
			next_1_num=CInt("&H" & next_1_c)
			If havechar Then
				havechar=False
				newstr=newstr & Chr(CInt("&H" & lastchar & next_1_c))
			Else
				If abs(next_1_num)<=127 Then
					newstr=newstr & Chr(next_1_num)
				Else
					havechar=True
					lastchar=next_1_c
				End If
			End If
			i=i+2
		Else
			newstr=newstr & char_c
		End If
	Next
	urldecode=newstr
End Function


' 作用同JS的escape一样
Function escape(str)
	dim i,s,c,a
	s=""
	For i=1 to Len(str)
		c=Mid(str,i,1)
		a=ASCW(c)
		If (a>=48 and a<=57) or (a>=65 and a<=90) or (a>=97 and a<=122) Then
			s = s & c
		ElseIf InStr("@*_+-./",c)>0 Then
			s = s & c
		ElseIf a>0 and a<16 Then
			s = s & "%0" & Hex(a)
		ElseIf a>=16 and a<256 Then
			s = s & "%" & Hex(a)
		Else
			s = s & "%u" & Hex(a)
		End If
	Next
	escape = s
End Function

' 作用同JS的unescape一样
Function unescape(str)
	dim i,newstr,c,havechar,lastchar,next_1_c,next_1_num
	havechar=false
	lastchar=""
	newstr=""
	For i=1 to Len(str)
		c=Mid(str,i,1)
		If c="+" Then
			newstr = newstr &" "
		ElseIf Mid(str,i,2)="%u" and i<=Len(str)-5 Then
			If IsNumeric("&H" & Mid(str,i+2,4)) Then
				newstr = newstr & CHRW(CInt("&H" & Mid(str,i+2,4)))
				i = i+5
			Else
				newstr = newstr & c
			End If
'		ElseIf c="%" and i<=Len(str)-2 Then
'			If IsNumeric("&H" & Mid(str,i+1,2)) Then
'				newstr = newstr & CHRW(CInt("&H" & Mid(str,i+1,2)))
'				i = i+2
'			Else
'				newstr = newstr & c
'			End If
		ElseIf c="%" and i<=Len(str)-2 Then
			next_1_c=Mid(str,i+1,2)
			If IsNumeric("&H" & next_1_c) Then
				next_1_num=CInt("&H" & next_1_c)
				If havechar=True Then
					havechar=False
					newstr=newstr & Chr(CInt("&H" & lastchar & next_1_c))
				Else
					If abs(next_1_num)<=127 Then
						newstr=newstr & Chr(next_1_num)
					Else
						havechar=True
						lastchar=next_1_c
					End If
				End If
				i=i+2
			Else
				newstr = newstr & c
			End If
		Else
			newstr = newstr & c
		End If
	Next
	unescape = newstr
End Function







Dim Base64EncMap(63)
Dim Base64DecMap(127)

' 使用前必须调用该Base64初始化函数
Public Sub Base64_init()
	Const BASE_64_MAP_INIT ="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	Dim nl
	nl = "<P>" & Chr(13) & Chr(10)
	Dim max, idx
	max = Len(BASE_64_MAP_INIT)
	For idx = 0 To max - 1
		Base64EncMap(idx) = Mid(BASE_64_MAP_INIT, idx + 1, 1)
	Next
	For idx = 0 To max - 1
		Base64DecMap(ASC(Base64EncMap(idx))) = idx
	Next 
End Sub


' Base64加密
Public Function Base64_Encode(plain)
	If len(plain) = 0 Then
		Base64_Encode = ""
		Exit Function
	End If

	Dim ret, ndx, by3, first, second, third
	by3 = (len(plain) \ 3) * 3
	ndx = 1
	Do While ndx <= by3
		first	= Asc(Mid(plain, ndx+0, 1))
		second	= Asc(Mid(plain, ndx+1, 1))
		third	= Asc(Mid(plain, ndx+2, 1))
		ret = ret & Base64EncMap( (first \ 4) And 63 )
		ret = ret & Base64EncMap( ((first * 16) And 48) + ((second \ 16) And 15 ) )
		ret = ret & Base64EncMap( ((second * 4) And 60) + ((third \ 64) And 3 ) )
		ret = ret & Base64EncMap( third And 63)
		ndx = ndx + 3
	Loop

	If by3 < Len(plain) Then
		first = Asc(Mid(plain, ndx+0, 1))
		ret = ret & Base64EncMap( (first \ 4) And 63 )
		If (Len(plain) Mod 3 ) = 2 Then
			second = Asc(Mid(plain, ndx+1, 1))
			ret = ret & Base64EncMap( ((first * 16) And 48) +((second \ 16) And 15 ) )
			ret = ret & Base64EncMap( ((second * 4) And 60) )
		Else
			ret = ret & Base64EncMap( (first * 16) And 48)
			ret = ret & "="
		End If
		ret = ret & "="
	End If

	Base64_Encode = ret
End Function


' Base64解密
Public Function Base64_Decode(scrambled)
	If Len(scrambled) = 0 Then
		Base64_Decode = ""
		Exit Function
	End If

	Dim realLen
	realLen = Len(scrambled)
	Do While Mid(scrambled, realLen, 1) = "="
		realLen = realLen - 1
	Loop

	Dim ret, ndx, by4, first, second, third, fourth
	ret = ""
	by4 = (realLen \ 4) * 4
	ndx = 1
	Do While ndx <= by4
		first	= Base64DecMap(Asc(Mid(scrambled, ndx+0, 1)))
		second	= Base64DecMap(Asc(Mid(scrambled, ndx+1, 1)))
		third	= Base64DecMap(Asc(Mid(scrambled, ndx+2, 1)))
		fourth	= Base64DecMap(Asc(Mid(scrambled, ndx+3, 1)))
		ret = ret & Chr( ((first * 4) And 255) +   ((second \ 16) And 3))
		ret = ret & Chr( ((second * 16) And 255) + ((third \ 4) And 15) )
		ret = ret & Chr( ((third * 64) And 255) + (fourth And 63) )
		ndx = ndx + 4
	Loop

	If ndx < realLen Then
		first = Base64DecMap(Asc(Mid(scrambled, ndx+0, 1)))
		second = Base64DecMap(Asc(Mid(scrambled, ndx+1, 1)))
		ret = ret & Chr( ((first * 4) And 255) +   ((second \ 16) And 3))
		If realLen Mod 4 = 3 Then
			third = Base64DecMap(Asc(Mid(scrambled,ndx+2,1)))
			ret = ret & Chr( ((second * 16) And 255) + ((third \ 4) And 15) )
		End If
	End If

	Base64_Decode = ret
End Function


%>